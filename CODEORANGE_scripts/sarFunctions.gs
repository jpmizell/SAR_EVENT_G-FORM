sarFunctions.gs

function sar_populateAvailabilityForm(theForm) {
  theForm.setAllowResponseEdits(true);
  theForm.setLimitOneResponsePerUser(true);
  let availItemMC = theForm.addMultipleChoiceItem();
  availItemMC.setTitle("Availability")
      .setChoices([
          availItemMC.createChoice("Responding"),
          availItemMC.createChoice("Unavailable")
      ])
      .setRequired(true);
  theForm.addTimeItem().setTitle('Arrival Time');
  theForm.addTextItem().setTitle('Notes');
  let availURL = theForm.getPublishedUrl();
  Logger.log(`POPULATED THE AVAILABILITY FORM`);
  return availURL
}

// CREATE THE SIGN-IN POSTER IN THE DIRECTORY
function sar_createSignInPoster(dir,directoryName,agencyFooter,formDate,formTime,signInQRImage,styleCenter) {
  let signInPosterDoc = doc_createDocument(directoryName+" SIGN-IN / OUT LINK",dir);
  Logger.log(`CREATED THE SIGN-IN POSTER FILE IN THE DIRECTORY`);
  addDocHeaderFooter(signInPosterDoc,directoryName,agencyFooter+' '+formDate+' '+formTime,`EVENT SIGN-IN/OUT QR CODE:`);
  let signInPosterBody = signInPosterDoc.getBody();
  signInPosterBody.appendPageBreak();
  signInPosterBody.insertImage(2, signInQRImage).setAttributes(styleCenter);
  Logger.log(`ADDED CONTENT TO THE SIGN-IN POSTER`);
  return signInPosterDoc;
}

// THE CODEORANGE FUNCTION - BUILD A CALL LIST IN THE SPREADSHEET
function codeOrangeCallLog(eventData,response,responseField) {
  let codeorangeCallLog = eventData.insertSheet().setName(`CODEORANGE-CALL_LOG`);
  
  //BUILD OUT THE CALL LIST
  //DYNAMIC LIST - ONLY THE TEAMS THAT ARE SELECTED  ---- !!!! NEED TO IDENTIFY WHERE THE RESULTS COME FROM.
  let respondentRequest = response[responseField];
  let numberRespondents = respondentRequest.length;
  let respondentString = `"&SUBSTITUTE(ADDRESS(1,MATCH("${respondentRequest[0]}",ROSTER!1:1,0),4),"1","")&" IS NOT NULL`;
  Logger.log(respondentString);
  if(respondentRequest[0]=='ALL TEAM') {
    respondentString = `"&SUBSTITUTE(ADDRESS(1,MATCH("CODEORANGE",ROSTER!1:1,0),4),"1","")&" = 'X'`;
  }
  else {
    for (let i=1; i < numberRespondents; i++) {
      respondentString += ` OR "&SUBSTITUTE(ADDRESS(1,MATCH("${respondentRequest[i]}",ROSTER!1:1,0),4),"1","")&" IS NOT NULL`;
    }
  }
  //STATIC CALL LIST - ALL TEAM
  addDataArrayToSheet(codeorangeCallLog,sarConfig().codeorangeCallLogData);
  addDataArrayToSheet(codeorangeCallLog,sarConfig().codeorangeRecallData);

}
function duplicateSheetIAP(dir,name,response,templateId) {
  const newSheet = createSheetFromTemplateId(name, dir, templateId);
  Logger.log(`${name} IN ${dir.getTitle}`);
  // UPDATE FIELDS WITH SEARCH DATA
  let sheetIAPData = newSheet.getSheetByName(`INSTRUCTIONS AND DATA`);
  sheetIAPData.getRange("B13").setValue(response['EVENT TITLE']);
  sheetIAPData.getRange("B14").setValue(response.date);
  sheetIAPData.getRange("B15").setValue(response.time);
  sheetIAPData.getRange("B18").setValue(response['GENERAL BRIEFING DATE']);
  sheetIAPData.getRange("B19").setValue(response['GENERAL BRIEFING TIME']);
  sheetIAPData.getRange("B20").setValue(``);
  sheetIAPData.getRange("B21").setValue(``);
  sheetIAPData.getRange("B23").setValue(`AUTOGENERATED BY SCZSAR INCIDENT FORM`);
  return newSheet
}